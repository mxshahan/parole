{"version":3,"file":"main.3dab6ef02de8d85d22ba.hot-update.js","sources":["webpack:///src/client/Reducers/content.js"],"sourcesContent":["export default (state = {}, action) => {\n    switch(action.type){\n        case 'SET_CONTENT':\n            return state = {\n                all: action.data,\n                cat_content: state.cat_content,\n                category: state.category,\n                single: state.single,\n                mycontent: state.mycontent \n            }\n        case 'SET_CATEGORY':\n            return state = {\n                all: state.all,\n                cat_content: state.cat_content,\n                single: state.single,\n                mycontent: state.mycontent,\n                category: action.data                \n            }\n        \n        case 'SET_CATEGORY_CONTENT':\n            return state = {\n                cat_content: action.data,\n                all: state.all,\n                category: state.category,\n                single: state.single,\n                mycontent: state.mycontent                \n            }\n        // case 'SET_PAGE_CONTENT':\n        //     let page_content = [];\n        //     for (let i=action.data-1;i<=action.data+11;i++) {\n        //         page_content.push(state.all[i])\n        //     }\n        //     return state.page_content;\n    \n        case 'MY_CONTENT':\n            // state.mycontent = action.data;\n            return state = {\n                all: state.all,\n                category: state.category,\n                cat_content: state.cat_content,\n                single: state.single,\n                mycontent: action.data                \n            }\n        case 'SINGLE_CONTENT':\n            return state = {\n                ...state.all,\n                ...state.category,\n                ...state.cat_content,\n                ...state.mycontent,\n                single: action.data                \n            }\n        case 'GET_SINGLE': \n            return state.single = Object.values(state.all).map((value) => value._id === action.id);\n        default:\n            return state;\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAKA;AALA;AAOA;AACA;AACA;AACA;AArDA;AAuDA;;;;A","sourceRoot":""}